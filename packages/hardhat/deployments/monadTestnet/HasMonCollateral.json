{
  "address": "0x68fE8Dec08447C6740159C9a9aca72f833a89c2B",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hasMON",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requiredAmount",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "perpEngine",
          "type": "address"
        }
      ],
      "name": "PerpEngineSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasMON",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "perpEngine",
      "outputs": [
        {
          "internalType": "contract IPerpEngine",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_perpEngine",
          "type": "address"
        }
      ],
      "name": "setPerpEngine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2ee89277f87bd2b99c6546ee9d7cb6cae54a81c3b94ac964bb5fea5527fe66df",
  "receipt": {
    "to": null,
    "from": "0x5E729a4F664abf7045466f12039a513DE9572E17",
    "contractAddress": "0x68fE8Dec08447C6740159C9a9aca72f833a89c2B",
    "transactionIndex": 7,
    "gasUsed": "560796",
    "logsBloom": "0x
    "blockHash": "0xbd8cc22172b367eaac1223a00e559f63143ba8eed015129bd0598ac2a4909e87",
    "transactionHash": "0x2ee89277f87bd2b99c6546ee9d7cb6cae54a81c3b94ac964bb5fea5527fe66df",
    "logs": [
      {
        "transactionIndex": 7,
        "blockNumber": 6999711,
        "transactionHash": "0x2ee89277f87bd2b99c6546ee9d7cb6cae54a81c3b94ac964bb5fea5527fe66df",
        "address": "0x68fE8Dec08447C6740159C9a9aca72f833a89c2B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005e729a4f664abf7045466f12039a513de9572e17"
        ],
        "data": "0x",
        "logIndex": 18,
        "blockHash": "0xbd8cc22172b367eaac1223a00e559f63143ba8eed015129bd0598ac2a4909e87"
      }
    ],
    "blockNumber": 6999711,
    "cumulativeGasUsed": "2298478",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xE887582468591CB9dE71ab01acA4101C756A6442"
  ],
  "numDeployments": 3,
  "solcInputHash": "6eb473e75c4e05be4ea9489cbc2ca831",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hasMON\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requiredAmount\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"perpEngine\",\"type\":\"address\"}],\"name\":\"PerpEngineSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasMON\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"perpEngine\",\"outputs\":[{\"internalType\":\"contract IPerpEngine\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_perpEngine\",\"type\":\"address\"}],\"name\":\"setPerpEngine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/perps/HasMonCollateral.sol\":\"HasMonCollateral\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/perps/HasMonCollateral.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IPerpEngine {\\n    function updateCollateral(address user, uint256 amount, bool isDeposit) external;\\n}\\n\\ncontract HasMonCollateral is Ownable {\\n    IERC20 public hasMON;\\n    IPerpEngine public perpEngine;\\n    mapping(address => uint256) public collateralBalances;\\n\\n    event CollateralDeposited(address indexed user, uint256 amount);\\n    event CollateralWithdrawn(address indexed user, uint256 amount);\\n    event PerpEngineSet(address perpEngine);\\n    event ERC20InsufficientAllowance(address indexed user, uint256 allowance, uint256 requiredAmount);\\n\\n    constructor(address _hasMON) Ownable(msg.sender) {\\n        hasMON = IERC20(_hasMON);\\n    }\\n\\n    function setPerpEngine(address _perpEngine) external onlyOwner {\\n        require(address(perpEngine) == address(0), \\\"PerpEngine already set\\\");\\n        perpEngine = IPerpEngine(_perpEngine);\\n        emit PerpEngineSet(_perpEngine);\\n    }\\n\\n    function depositCollateral(uint256 amount) external {\\n        require(amount > 0, \\\"Deposit amount must be greater than zero\\\");\\n\\n        uint256 allowance = hasMON.allowance(msg.sender, address(this));\\n        if (allowance < amount) {\\n            emit ERC20InsufficientAllowance(msg.sender, allowance, amount);\\n            return;\\n        }\\n\\n        require(hasMON.transferFrom(msg.sender, address(this), amount), \\\"Transfer failed\\\");\\n\\n        collateralBalances[msg.sender] += amount;\\n        perpEngine.updateCollateral(msg.sender, amount, true);\\n\\n        emit CollateralDeposited(msg.sender, amount);\\n    }\\n\\n    function withdrawCollateral(uint256 amount) external {\\n        require(amount > 0, \\\"Withdraw amount must be greater than zero\\\");\\n        require(collateralBalances[msg.sender] >= amount, \\\"Insufficient collateral\\\");\\n\\n        collateralBalances[msg.sender] -= amount;\\n        perpEngine.updateCollateral(msg.sender, amount, false);\\n\\n        require(hasMON.transfer(msg.sender, amount), \\\"Transfer failed\\\");\\n\\n        emit CollateralWithdrawn(msg.sender, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x673ab5714b413ccd1e39cea03d6428f80296f4368843382130ef6752ce29fc62\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080346100c657601f61091538819003918201601f19168301916001600160401b038311848410176100cb578084926020946040528339810103126100c657516001600160a01b0390818116908190036100c65733156100ad5760005460018060a01b0319903382821617600055604051933391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600154161760015561083390816100e28239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004908136101561001657600080fd5b600092833560e01c90816329bc969d146104d25750806348ba4d2b146104a95780636112fe2e146102a6578063715018a614610249578063768e48a1146102205780638da5cb5b146101f8578063b619daf714610145578063bad4a01f146101215763f2fde38b1461008757600080fd5b3461011d57602036600319011261011d576001600160a01b03823581811693919290849003610119576100b8610509565b8315610103575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b5050346101415760203660031901126101415761013e90356105dc565b80f35b5080fd5b503461011d57602036600319011261011d576001600160a01b038235818116939084900361011957610175610509565b6002549182166101bc57506001600160a01b0319168217600255519081527ffd111688e3686ea2821d45ddcfbee4df0c026b55840ef0165af173924e7bf68090602090a180f35b606490602084519162461bcd60e51b8352820152601660248201527514195c9c115b99da5b9948185b1c9958591e481cd95d60521b6044820152fd5b838234610141578160031936011261014157905490516001600160a01b039091168152602090f35b83823461014157816003193601126101415760015490516001600160a01b039091168152602090f35b83346102a357806003193601126102a357610262610509565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50903461011d576020806003193601126104a5578135918215610452573385526003825282848620541061041157338552600382528385208054908482039182116103fe57556002546001600160a01b039086908216803b156101415781906064885180948193630363a16160e01b835233898401528a60248401528160448401525af180156103f4576103dc575b5085916044849260015416918751948593849263a9059cbb60e01b845233908401528860248401525af19081156103d2577fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d93949161039b9187916103a5575b5061059e565b519283523392a280f35b6103c59150843d86116103cb575b6103bd818361055f565b810190610581565b38610395565b503d6103b3565b84513d87823e3d90fd5b916044966103eb859394610535565b96509190610335565b86513d89823e3d90fd5b634e487b7160e01b875260118352602487fd5b60649184519162461bcd60e51b8352820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152fd5b60849184519162461bcd60e51b8352820152602960248201527f576974686472617720616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152fd5b8380fd5b83823461014157816003193601126101415760025490516001600160a01b039091168152602090f35b929050346104a55760203660031901126104a557356001600160a01b038116908190036104a5579260209381526003845220548152f35b6000546001600160a01b0316330361051d57565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff811161054957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761054957604052565b90816020910312610599575180151581036105995790565b600080fd5b156105a557565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9081156107a75760015460408051636eb1769f60e11b81523360048201523060248201529093916020916001600160a01b03918216908381604481855afa90811561079c5760009161076f575b5084811061073957508260009160648851809481936323b872dd60e01b83523360048401523060248401528960448401525af1801561072e57610673916000916103a5575061059e565b33600052600382528460002080549084820180921161071857556002541693843b1561059957600080956064835180988193630363a16160e01b8352336004840152886024840152600160448401525af194851561070d577fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a13584801429394956106fe575b50519283523392a2565b61070790610535565b386106f4565b50513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b86513d6000823e3d90fd5b94957ffb8f41b23e99d2101d86da76cdfa87dd51c82ed07d3cb62cbc473e469dbc75c394925080939150519485528401523392a2565b908482813d8311610795575b610785818361055f565b810103126102a357505138610629565b503d61077b565b87513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f4465706f73697420616d6f756e74206d7573742062652067726561746572207460448201526768616e207a65726f60c01b6064820152608490fdfea26469706673582212202e73191f97c2cd4c97c553f021397dae51c7ddf0068e958583b5b5da3c6e60d364736f6c63430008140033",
  "deployedBytecode": "0x608060408181526004908136101561001657600080fd5b600092833560e01c90816329bc969d146104d25750806348ba4d2b146104a95780636112fe2e146102a6578063715018a614610249578063768e48a1146102205780638da5cb5b146101f8578063b619daf714610145578063bad4a01f146101215763f2fde38b1461008757600080fd5b3461011d57602036600319011261011d576001600160a01b03823581811693919290849003610119576100b8610509565b8315610103575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b5050346101415760203660031901126101415761013e90356105dc565b80f35b5080fd5b503461011d57602036600319011261011d576001600160a01b038235818116939084900361011957610175610509565b6002549182166101bc57506001600160a01b0319168217600255519081527ffd111688e3686ea2821d45ddcfbee4df0c026b55840ef0165af173924e7bf68090602090a180f35b606490602084519162461bcd60e51b8352820152601660248201527514195c9c115b99da5b9948185b1c9958591e481cd95d60521b6044820152fd5b838234610141578160031936011261014157905490516001600160a01b039091168152602090f35b83823461014157816003193601126101415760015490516001600160a01b039091168152602090f35b83346102a357806003193601126102a357610262610509565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50903461011d576020806003193601126104a5578135918215610452573385526003825282848620541061041157338552600382528385208054908482039182116103fe57556002546001600160a01b039086908216803b156101415781906064885180948193630363a16160e01b835233898401528a60248401528160448401525af180156103f4576103dc575b5085916044849260015416918751948593849263a9059cbb60e01b845233908401528860248401525af19081156103d2577fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d93949161039b9187916103a5575b5061059e565b519283523392a280f35b6103c59150843d86116103cb575b6103bd818361055f565b810190610581565b38610395565b503d6103b3565b84513d87823e3d90fd5b916044966103eb859394610535565b96509190610335565b86513d89823e3d90fd5b634e487b7160e01b875260118352602487fd5b60649184519162461bcd60e51b8352820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152fd5b60849184519162461bcd60e51b8352820152602960248201527f576974686472617720616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b6064820152fd5b8380fd5b83823461014157816003193601126101415760025490516001600160a01b039091168152602090f35b929050346104a55760203660031901126104a557356001600160a01b038116908190036104a5579260209381526003845220548152f35b6000546001600160a01b0316330361051d57565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff811161054957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761054957604052565b90816020910312610599575180151581036105995790565b600080fd5b156105a557565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b9081156107a75760015460408051636eb1769f60e11b81523360048201523060248201529093916020916001600160a01b03918216908381604481855afa90811561079c5760009161076f575b5084811061073957508260009160648851809481936323b872dd60e01b83523360048401523060248401528960448401525af1801561072e57610673916000916103a5575061059e565b33600052600382528460002080549084820180921161071857556002541693843b1561059957600080956064835180988193630363a16160e01b8352336004840152886024840152600160448401525af194851561070d577fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a13584801429394956106fe575b50519283523392a2565b61070790610535565b386106f4565b50513d6000823e3d90fd5b634e487b7160e01b600052601160045260246000fd5b86513d6000823e3d90fd5b94957ffb8f41b23e99d2101d86da76cdfa87dd51c82ed07d3cb62cbc473e469dbc75c394925080939150519485528401523392a2565b908482813d8311610795575b610785818361055f565b810103126102a357505138610629565b503d61077b565b87513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f4465706f73697420616d6f756e74206d7573742062652067726561746572207460448201526768616e207a65726f60c01b6064820152608490fdfea26469706673582212202e73191f97c2cd4c97c553f021397dae51c7ddf0068e958583b5b5da3c6e60d364736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/perps/HasMonCollateral.sol:HasMonCollateral",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 274,
        "contract": "contracts/perps/HasMonCollateral.sol:HasMonCollateral",
        "label": "hasMON",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 277,
        "contract": "contracts/perps/HasMonCollateral.sol:HasMonCollateral",
        "label": "perpEngine",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IPerpEngine)269"
      },
      {
        "astId": 281,
        "contract": "contracts/perps/HasMonCollateral.sol:HasMonCollateral",
        "label": "collateralBalances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IPerpEngine)269": {
        "encoding": "inplace",
        "label": "contract IPerpEngine",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}